# This file should normally be installed at: /etc/salt/cloud


##########################################
#####          VM Defaults           #####
##########################################

# Set the size of minion keys to generate, defaults to 2048
#
#keysize: 2048


# Set the default os being deployed. This sets which deployment script to
# apply. This argument is optional.
#
#script: bootstrap-salt


##########################################
#####         Logging Settings       #####
##########################################

# The location of the master log file
#
#log_file: /var/log/salt/cloud


# The level of messages to send to the console.
# One of 'garbage', 'trace', 'debug', 'info', 'warning', 'error', 'critical'.
#
# The following log levels are considered INSECURE and may log sensitive data:
# ['garbage', 'trace', 'debug']
#
# Default: 'info'
#
#log_level: info


# The level of messages to send to the log file.
# One of 'garbage', 'trace', 'debug', info', 'warning', 'error', 'critical'.
#
# Default: 'info'
#
#log_level_logfile: info


# The date and time format used in log messages. Allowed date/time formatting
# can be seen here:
#
#	http://docs.python.org/library/time.html#time.strftime
#
#log_datefmt: '%Y-%m-%d %H:%M:%S'


# The format of the console logging messages. Allowed formatting options can
# be seen here:
#
#	http://docs.python.org/library/logging.html#logrecord-attributes
#
# Console log colors are specified by these additional formatters:
#
# %(colorlevel)s
# %(colorname)s
# %(colorprocess)s
# %(colormsg)s
#
# Since it is desirable to include the surrounding brackets, '[' and ']', in
# the coloring of the messages, these color formatters also include padding as
# well.  Color LogRecord attributes are only available for console logging.
#
#log_fmt_console: '%(colorlevel)s %(colormsg)s'
#log_fmt_console: '[%(levelname)-8s] %(message)s'
#
#log_fmt_logfile: '%(asctime)s,%(msecs)03d [%(name)-17s][%(levelname)-8s] %(message)s'


# Logger levels can be used to tweak specific loggers logging levels.
# For example, if you want to have the salt library at the 'warning' level,
# but you still wish to have 'salt.modules' at the 'debug' level:
#
#   log_granular_levels:
#     'salt': 'warning',
#     'salt.modules': 'debug'
#     'saltcloud': 'info'
#
#log_granular_levels: {}


##########################################
#####         Misc Defaults          #####
##########################################

# Whether or not to remove the accompanying SSH key from the known_hosts file
# when an instance is destroyed.
#
# Default: 'False'
#
#delete_sshkeys: False

# Whether or not to include grains information in the /etc/salt/minion file
# which is generated when the minion is provisioned.  For example...
#   grains:
#     salt-cloud:
#       driver: ec2
#       provider: my_ec2:ec2
#       profile: micro_ec2
#
# Default: 'True'
#
#enable_cloud_grains: 'True'
log_file: "/home/yourname/salt-ssh/cloud.log"

#freetier-us-east-2b:
  # Set up the location of the salt master
  #
  #minion:
  #  master: saltmaster.example.com

  # Set up grains information, which will be common for all nodes
  # using this provider
  #grains:
  #  node_type: broker
  #  release: 1.0.1

  # Specify whether to use public or private IP for deploy script.
  #
  # Valid options are:
  #     private_ips - The salt-cloud command is run inside the EC2
  #     public_ips - The salt-cloud command is run outside of EC2
  #
  #ssh_interface: public_ips

  # Optionally configure the Windows credential validation number of
  # retries and delay between retries.  This defaults to 10 retries
  # with a one second delay betwee retries
  #win_deploy_auth_retries: 10
  #win_deploy_auth_retry_delay: 1

  # If 'role_arn' is specified the above credentials are used to
  # to assume to the role. By default, role_arn is set to None.
  #role_arn: arn:aws:iam::012345678910:role/SomeRoleName

  # Optionally configure default region
  # Use salt-cloud --list-locations <provider> to obtain valid regions
  #
  #location: us-east-2b
  #availability_zone: ap-southeast-1b

  # Configure which user to use to run the deploy script. This setting is
  # dependent upon the AMI that is used to deploy. It is usually safer to
  # configure this individually in a profile, than globally. Typical users
  # are:
  #
  # Amazon Linux -> ec2-user
  # RHEL         -> ec2-user
  # CentOS       -> ec2-user
  # Ubuntu       -> ubuntu
  # Debian       -> admin
  #
  #ssh_username: ubuntu

  # Optionally add an IAM profile
  #iam_profile: 'arn:aws:iam::123456789012:instance-profile/ExampleInstanceProfile'

  #driver: ec2
